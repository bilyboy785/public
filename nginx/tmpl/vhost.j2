map $http_accept $webp_suffix {
        default "";
        "~*webp" ".webp";
}
map $http_accept $avif_suffix {
        default "";
        "~*avif" ".avif";
}

{%- if INSTALL_TYPE == "wordpress" or INSTALL_TYPE == "php" %}
upstream {{ PRIMARY_DOMAIN }} {
	server            unix:/var/run/php/{{ PRIMARY_DOMAIN }}.sock;
}
{% endif %}

server {
	listen 80;
	server_name {{ PRIMARY_DOMAIN }}{%- if SECONDARY_DOMAIN %} {{ SECONDARY_DOMAIN }}{% endif %}{%- if ALIASES_SUPP %} {{ ALIASES_SUPP_DOMS }}{% endif %};
	return 301 https://{{ PRIMARY_DOMAIN }}$request_uri;

    include snippets/errors.conf;
    include snippets/letsencrypt.conf;

	access_log /var/log/nginx/{{ PRIMARY_DOMAIN }}.access.log combined buffer=32k;
	access_log /var/log/nginx/loki/{{ PRIMARY_DOMAIN }}.analytics.log json_analytics;
	error_log /var/log/nginx/{{ PRIMARY_DOMAIN }}.error.log notice;
}

{%- if SECONDARY_DOMAIN %}
server {
	listen 443 ssl http2;
	server_name {{ SECONDARY_DOMAIN }}{%- if ALIASES_SUPP %} {{ ALIASES_SUPP_DOMS }}{% endif %};
	return 301 https://{{ PRIMARY_DOMAIN }}$request_uri;

    include snippets/ssl.conf;
    include snippets/errors.conf;
    include snippets/letsencrypt.conf;

	ssl_certificate /etc/letsencrypt/live/{{ PRIMARY_DOMAIN }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ PRIMARY_DOMAIN }}/privkey.pem;

	access_log /var/log/nginx/{{ PRIMARY_DOMAIN }}.access.log combined buffer=32k;
	access_log /var/log/nginx/loki/{{ PRIMARY_DOMAIN }}.analytics.log json_analytics;
	error_log /var/log/nginx/{{ PRIMARY_DOMAIN }}.error.log notice;
}
{% endif %}

server {
	listen            443 ssl http2;
	server_name       {{ PRIMARY_DOMAIN }};

	root              /var/www/html/{{ PRIMARY_DOMAIN }}/web;

	index		  index.php index.html;

	client_max_body_size 256M;

	ssl_certificate /etc/letsencrypt/live/{{ PRIMARY_DOMAIN }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ PRIMARY_DOMAIN }}/privkey.pem;

    include snippets/webpavif.conf;
    include snippets/static.conf;
    {%- if USE_CLOUDFLARE %}
    include snippets/cloudflare.conf;
    {% endif %}
    include snippets/letsencrypt.conf;
    include snippets/ssl.conf;
    include snippets/headers.conf;
    include snippets/restrict.conf;
    include snippets/error_pages.conf;
    include snippets/file_cache.conf;
    {%- if INSTALL_TYPE == "wordpress" %}
    include snippets/yoast_sitemap.conf;
    {% endif %}

    {%- if INSTALL_TYPE == "wordpress" %}
    location /wp-login.php {
        limit_req zone=mylimit burst=20 nodelay;
    }
    {% endif %}
    
	location / {
		try_files     $uri $uri/ /index.php?$args;
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Accept-Encoding' 'gzip';
	}

	{%- if INSTALL_TYPE == "wordpress" or INSTALL_TYPE == "php" %}
    location ~ \.php$ {
		try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		if (!-f $document_root$fastcgi_script_name) {
			return 404;
		}
		fastcgi_index index.php;
		fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_read_timeout 600;
		include       fastcgi.conf;
		fastcgi_pass  {{ PRIMARY_DOMAIN }};
	}
    {% endif %}

    {%- if INSTALL_TYPE == "wordpress" or INSTALL_TYPE == "php" %}
    location ~ ^/(status_phpfpm|ping)$ {
        allow 127.0.0.1;
		deny all;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        include fastcgi_params;
		access_log off;
        fastcgi_pass   {{ PRIMARY_DOMAIN }};
    }
    {% endif %}
    
	access_log /var/log/nginx/{{ PRIMARY_DOMAIN }}.access.log combined buffer=32k;
	access_log /var/log/nginx/loki/{{ PRIMARY_DOMAIN }}.analytics.log json_analytics;
	error_log /var/log/nginx/{{ PRIMARY_DOMAIN }}.error.log notice;
}